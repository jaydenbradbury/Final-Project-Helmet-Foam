---
title: "Final_Report"
format: pdf
editor: visual
---

```{r}
#| echo: false
#| include: false
#| label: front-matter
#| warning: false
# clean up & set default chunk options
rm(list = ls())
knitr::opts_chunk$set(echo = FALSE)

# packages
library(tidyverse) # for example
library(mosaic)    # for example
library(ggformula) # for example
library(lme4)
library(ggplot2)
library(emmeans)
library(nlme)
library(readxl)
library(tinytex)   # for example

# read in data 

# use this space to do any data processing you need

# load data
df <- read_xlsx("Foster_Mines_Capstone_Data_v2.xlsx")

#Pivot all cycle-related columns into long format
df_long <- df %>%
  pivot_longer(
    cols = matches("(^Cyc_[A-Z]$)|(_Cyc_[A-Z]$)"),
    names_to = "FullName",       # give it a neutral name
    values_to = "Value"
  )

#Extract the cycle (e.g., Cyc_A) and variable type (e.g., E1_MPA)
df_tidy <- df_long %>%
  mutate(
    Cycle = str_extract(FullName, "Cyc_[A-Z]$"),
    VariableType = str_remove(FullName, "_Cyc_[A-Z]$"),
    VariableType = ifelse(VariableType == "Cyc", "Cycle_time", VariableType)
  ) %>%
  select(-FullName) %>%
  pivot_wider(
    names_from = VariableType,
    values_from = Value
  ) %>%
  arrange(SampleCode, Cycle)

head(df_tidy)

#Pivot the actual cycle time columns only
df_lt <- df_tidy %>%
  pivot_longer(
    cols = matches("^Cyc_[A-Z]$"),  # Cyc_A to Cyc_N
    names_to = "Cycle_column",      # Temporary name to avoid collision
    values_to = "Num_squish"
  )

#Remove NA times
df_clean <- df_lt %>%
  filter(!is.na(Num_squish)) %>%
  select(-Cycle) %>%                #Drop the existing "Cycle" column and rename
  rename(Cycle = Cycle_column)  

df_clean <- df_clean |>
  mutate(
    ChemIndex = as.numeric(str_split_fixed(SampleCode, "_", 4)[,2]),
    Porosity = as.numeric(str_split_fixed(SampleCode, "_", 4)[,3]))

df_clean <- df_clean %>%
  group_by(SampleCode) %>%
  mutate(
    Estatic_initial = first(Estatic_MPA),  # First Estatic value per SampleCode
    Estatic_rel = Estatic_MPA / Estatic_initial  # Relative to initial
  ) %>%
  ungroup()

df_clean <- df_clean |>
  select(-E1_MPA, -tandelta, -NVP)

df_clean <- df_clean %>%
   mutate(Porosity = case_when(
     Porosity == 71 ~ "Low",
     Porosity == 81 ~ "High"
   ))
 
 df_clean <- df_clean %>%
   mutate(ChemIndex = case_when(
     ChemIndex == 121 ~ "High",
     ChemIndex == 100 ~ "Medium",
     ChemIndex == 79 ~ "Low"
   ))
 
 df_clean$Porosity <- factor(df_clean$Porosity, levels = c("Low", "High"))
 
 df_clean$ChemIndex <- factor(df_clean$ChemIndex, levels = c("Low", "Medium", "High"))
 
 df_clean <- df_clean %>%
   mutate(Cycle = case_when(
     Cycle == "Cyc_A" ~ "A",
     Cycle == "Cyc_B" ~ "B",
     Cycle == "Cyc_C" ~ "C",
     Cycle == "Cyc_D" ~ "D",
     Cycle == "Cyc_E" ~ "E",
     Cycle == "Cyc_F" ~ "F",
     Cycle == "Cyc_G" ~ "G",
     Cycle == "Cyc_H" ~ "H",
     Cycle == "Cyc_I" ~ "I",
     Cycle == "Cyc_J" ~ "J",
     Cycle == "Cyc_K" ~ "K",
     Cycle == "Cyc_L" ~ "L",
     Cycle == "Cyc_M" ~ "M",
     Cycle == "Cyc_N" ~ "N"
   ))
 
 df_clean$Cycle <- factor(df_clean$Cycle,
                          levels = c("A", "B", "C", "D", "E", "F", "G", "H", "I", "J", "K", "L", "M", "N"))
 
 df_clean <- df_clean %>%
   filter(Num_squish <= 10000)
 df_clean <- df_clean %>%
   mutate(Time = Num_squish/freq)
 
 df_clean <- df_clean |>
   filter(Estatic_rel < 1)
 
```

## 1. Project Description

Moira Foster was tasked with designing an experiment that measured helmet foam durability over long periods of time. The experiment contained three different chemical compositions of foam with two different porosity levels, to create six types of foam. Each of these foams were compressed at different frequencies, strains, and stresses over a period of time. Dr. Foster has hired **enter group name here.** to deterimine which foam type has the most consistent static stiffness over time with impact. The sample contains 71 different foam samples across the 6 combinations.

*Should be in paragraph from (not bullets). Written for a 3rd party such as your clientâ€™s boss, or an external review board. As part of your description, consider the following:*

-   *Type of study \[Designed experiment, Observational study, Sample survey\] and brief description of design*
-   *Stage of the experiment \[Planning stage or Analysis stage\]*
-   *Objective of study and role of this analysis*
-   *Scope of project*
-   *Intended use for results*

## 1.1 Research Questions

**Question 1:** Which combination of porosity and chemical index is best to predict static stiffness over time after accounting for all other variables?

## 1.2 Variables

*What is (are) possible explanatory and response variables? Relevant notes about how each is measured/recorded.*

*A table is recommended here.*

Below is a table of the variables we considered in our analysis:

```{r}
#| echo: false
#| label: tbl-variables
#| tbl-cap: "Variables used in Data Analysis"

variable.desc <- data.frame(Name = c("Sample Code", "Strain", "Relative Porosity", "Frequency", "Amplitude", "Number of Squishes", "Chemical Index", "Porosity", "Relative Static Stiffness", "Time"))
variable.desc$Type <- c("Categorical", "Numerical", "Numerical", "Numerical", "Numerical", "Numerical", "Categorical", "Categorical", "Numerical", "Numerical")
variable.desc$Notes <- c("Unique identifier for sample of foam", "Amount of strain tested on foam sample in kPa", "The measured porosity of the foam sample after the initial squish", "The frequency at which the sample foam was squished", "The amplitude at which the sample foam was squished", "Number of squishes performed on foam at given time", "Chemical index of given foam sample", "Porosity of given foam sample", "Static stiffness of given foam sample relative to the initial value of static stiffness", "Time recorded at each measurement")
knitr::kable(variable.desc, format = "latex", booktabs = TRUE,
             col.names = c("Name", "Type", "Notes"),
             longtable = FALSE) %>%
  kable_styling( full_width = FALSE) %>%
  column_spec(3, width = "8cm") %>% 
  add_header_above(c(" " = 3))
```

*If design is complex, here is a good place to write a detailed description.*

# 2. Exploratory Data Analysis (EDA)

*Description of important variables.* - *summary statistics* - *missing Data* - *unusual or concerning observations*

*Relevant summary figures that provide intuition for the research questions and/or inform important modeling decisions (correlation structure, etc).*

*Describe important outcomes of the EDA that the reader should notice.*

```{r, warning=FALSE, echo = FALSE}
df_clean %>%
  group_by(ChemIndex, Cycle) %>%
  summarise(mean_Estatic = mean(Estatic_MPA, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = Cycle, y = mean_Estatic, color = factor(ChemIndex), group = ChemIndex)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  labs(
    title = "Estatic_MPA Across Cycles by Foam Type",
    x = "Cycle",
    y = "Mean Estatic_MPA",
    color = "Foam (chemindex)"
  ) +
  theme_minimal()
```

```{r, warning=FALSE, echo = FALSE}
#THIS IS THE PLOT FOR POROSITY CHANGE IN ESTATIC OVER TIME (CYCLES)
# Plot with group average lines by porosity
df_clean %>%
  group_by(Porosity, Cycle) %>%
  summarise(mean_Estatic = mean(Estatic_MPA, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = Cycle, y = mean_Estatic, color = factor(Porosity), group = Porosity)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  labs(
    title = "Estatic_MPA Across Cycles by Porosity",
    x = "Cycle",
    y = "Mean Estatic_MPA",
    color = "Foam (Porosity)"
  ) +
  theme_minimal()
```

```{r}
#THIS IS THE PLOT FOR CHANGE IN ESTATIC OVER TIME FOR EACH UNIQUE COMBO OF POROSTIY AND CHEM INDEX
df_clean %>%
  group_by(ChemIndex, Porosity, Cycle) %>%
  summarise(mean_Estatic = mean(Estatic_MPA, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(
    x = Cycle,
    y = mean_Estatic,
    group = interaction(ChemIndex, Porosity),
    color = interaction(ChemIndex, Porosity)
  )) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  labs(
    title = "Estatic_MPA Across Cycles by Foam Type and Porosity",
    x = "Cycle",
    y = "Mean Estatic_MPA",
    color = "chemindex / Porosity"
  ) +
  theme_minimal()

```

```{r}
ggplot(df_clean, aes(x = factor(ChemIndex), fill = factor(ChemIndex))) +
  geom_bar() +
  labs(title = "Count of Each Foam Type",
       x = "Foam Type",
       y = "Count") +
  theme_minimal() +
  theme(legend.position = "none")
```

```{r}
ggplot(df_clean, aes(x = factor(Porosity), fill = factor(Porosity))) +
  geom_bar() +
  labs(title = "Count of Each Foam Type",
       x = "Foam Type",
       y = "Count") +
  theme_minimal() +
  theme(legend.position = "none")
```

```{r}
## corr matrix for estatic mpa, tan delta (damping), and NVP
 df_clean %>%
  select(Estatic_MPA, tandelta, NVP) %>%
  cor(use = "complete.obs")

```

```{r}
df_clean %>%
  group_by(ChemIndex, tandelta) %>%
  summarise(mean_Estatic = mean(Estatic_MPA, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = tandelta, y = mean_Estatic, color = factor(ChemIndex), group = ChemIndex)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  labs(
    title = "Estatic_MPA vs. tan delta by Foam Type",
    x = "tan delta",
    y = "Mean Estatic_MPA",
    color = "Foam (chemindex)"
  ) +
  theme_minimal()
```

```{r}
df_clean %>%
  group_by(Porosity, tandelta) %>%
  summarise(mean_Estatic = mean(Estatic_MPA, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(x = tandelta, y = mean_Estatic, color = factor(Porosity), group = Porosity)) +
  geom_line(size = 1.2) +
  geom_point(size = 2) +
  labs(
    title = "Estatic_MPA vs. tan delta by Foam Type",
    x = "tan delta",
    y = "Mean Estatic_MPA",
    color = "Foam (porosity)"
  ) +
  theme_minimal()
```

```{r}
df_clean %>%
  group_by(ChemIndex, Porosity, Stress_kPa) %>%
  summarise(mean_Estatic = mean(Estatic_MPA, na.rm = TRUE), .groups = "drop") %>%
  ggplot(aes(
    x = Stress_kPa,
    y = mean_Estatic,
    group = interaction(ChemIndex, Porosity),
    color = interaction(ChemIndex, Porosity)
  )) +
  geom_smooth(size = 1.2) +
  geom_point(size = 2) +
  labs(
    title = "Estatic_MPA vs. Stress by Foam Type and Porosity",
    x = "stress",
    y = "Mean Estatic_MPA",
    color = "chemindex / Porosity"
  ) +
  theme_minimal()
```

```{r}
df_stability <- df_clean %>%
  group_by(ChemIndex, Porosity) %>%
  summarise(
    sd_Estatic = sd(Estatic_MPA, na.rm = TRUE),  # measures variation
    range_Estatic = max(Estatic_MPA, na.rm = TRUE) - min(Estatic_MPA, na.rm = TRUE),  # another stability metric
    .groups = "drop"
  ) %>%
  arrange(sd_Estatic)

ggplot(df_stability, aes(x = factor(ChemIndex), y = sd_Estatic, fill = factor(Porosity))) +
  geom_bar(stat = "identity", position = "dodge") +
  labs(
    title = "Standard Deviation of Static Stiffness by Foam Type and Porosity",
    x = "Chemical Index",
    y = "SD of Estatic_MPA (lower = more stable)",
    fill = "Porosity"
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = Estatic_rel, color = amp)) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  facet_grid(Porosity ~ ChemIndex) +
  labs(
    title = "Effect of Amplitude on Estatic_rel Over Time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
    color = "Amplitude"
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = Estatic_rel, color = freq)) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  facet_grid(Porosity ~ ChemIndex) +
  labs(
    title = "Effect of Frequency on Estatic_rel Over Time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
    color = "Frequency"
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = Estatic_rel, color = Relporo)) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  facet_grid(Porosity ~ ChemIndex) +
  labs(
    title = "Effect of Relative Porosity on Estatic_rel Over Time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
    color = "Relative Porosity"
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = Estatic_rel, color = Stress_kPa)) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  facet_grid(Porosity ~ ChemIndex) +
  labs(
    title = "Effect of stress on Estatic_rel Over Time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
    color = "Stress"
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = Estatic_rel, color = strain)) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  facet_grid(Porosity ~ ChemIndex) +
  labs(
    title = "Effect of strain on Estatic_rel Over Time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
    color = "strain"
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = Estatic_rel)) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  labs(
    title = "Estatic_relative over time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
  ) +
  theme_minimal()
```

```{r}
ggplot(df_clean, aes(x = Cycle, y = sqrt(Estatic_rel))) +
  geom_line(aes(group = SampleCode), alpha = 0.4) +
  geom_smooth(method = "loess", se = FALSE, linewidth = 1.2) +
  labs(
    title = "Estatic_relative over time",
    x = "Cycle",
    y = "Relative Static Stiffness (Estatic_rel)",
  ) +
  theme_minimal()
```

# 3. Statistical Analysis

*Describe statistical analysis in terms that your client will be able to understand and perhaps use in presenting their own research. This section should summarize all relevant analyses that lead to your final conclusions/decisions/recommendations, but should NEVER include visible code (folded code chunks are fine) or unformatted software output.*

-   *Model Assumptions & how checked/verified (details left to appendix)*
-   *Interpretation of estimates/statistics/p-values IN CONTEXT*
-   *Enough detail that the model/analysis could be reproduced by another statistician*

The linear mixed effects model is defined as: $$
\begin{align*}
Estatic\_rel_{ij} &= \underbrace{\beta_0}_{\text{fixed intercept}} + \underbrace{a_j}_{\text{random intercept for SampleCode}} \\
&\quad + \beta_1 \left(\log(\text{Time}) \cdot \text{Porosity} \right)_{ij} \\
&\quad + \beta_2 \left(\log(\text{Time}) \cdot \text{Porosity} \cdot \text{ChemIndex} \right)_{ij} \\
&\quad + \beta_3 \cdot \text{freq}_{ij} + \beta_4 \cdot \text{numSquish}_{ij} + \varepsilon_{ij}
\end{align*}
$$ where:

$\beta_0$ is the fixed intercept $a_j \sim \mathcal{N}(0, \sigma^2_{SampleCode})$ is the random intercept for group $j$ (`SampleCode`) $\varepsilon_{ij} \sim \mathcal{N}(0, \sigma^2)$ is the residual error

```{r}
#| echo: false
#| label: Model_code
#| warning: false


st_stiff_model <- lmer( Estatic_rel ~  log(Time):Porosity*ChemIndex + freq +  Num_squish+  (1|SampleCode), data = df_clean)

summary(st_stiff_model)

library(nlme)
m1 <- lme(Estatic_rel ~ log(Time):Porosity*ChemIndex +  freq + Num_squish ,random=~1|SampleCode,data=df_clean)
anova(m1)
```

```{r, warning = FALSE}
#| echo: false
#| label: em-plot
#| warning: false
#| fig-cap: "Emmeans Comparison by Porosity*ChemIndex"
emmean <- emmeans(st_stiff_model,~ Porosity *  ChemIndex)
plot(emmean)
```

# 4. Recommendations

*Succinct response to each question laid out in 1.2. This a much shorter version of section 3, and focuses on conclusions rather than the analyses.*

**Question 1:** Which combination of porosity and chemical index is best at keeping static stiffness stable over time, after accounting for all other variables?

# 5. Resources

*List resources that your client might find useful*

# 6. Additional Considerations

-   *Limitations to the recommendations*
-   *Concerns you may have about the study; suggestions for similar studies in future*
-   *Technical comments*

# Technical Appendix

*Detailed information and a copy of code and or software results. Additional graphs and supporting figures may also be placed in the appendix.*

```{r}
# model diagnostic plots
qqnorm(residuals(st_stiff_model),
       main = "Normal Q-Q Plot: Residuals")
qqline(residuals(st_stiff_model), col = "red")

qqnorm(ranef(st_stiff_model)$SampleCode[[1]],
       main = "Normal Q-Q Plot: Random Intercepts")  
qqline(ranef(st_stiff_model)$SampleCode[[1]], col = "red")

hist(residuals(st_stiff_model))

plot(st_stiff_model)
```

### R Script

```{r ref.label=c('front-matter', 'fig-example1','tbl-summarystats', 'fig-example2')}
#| echo: true
#| eval: false

# Reprinted code chunks used previously for analysis
```
